let e={prefix:"af-",breakpoints:{sm:"(max-width: 640px)",md:"(min-width: 641px) and (max-width: 768px)",lg:"(min-width: 769px) and (max-width: 1024px)",xl:"(min-width: 1025px) and (max-width: 1280px)",xxl:"(min-width: 1281px)"},engine:"gsap",debug:!0};const t={log:(...e)=>{i.Config.debug&&console.log("[AF]",...e)},warn:(...e)=>{i.Config.debug&&console.warn("[AF]",...e)},error:(...e)=>{i.Config.debug&&console.error("[AF]",...e)}},r={deepMergeObjects(e,t){if(Array.isArray(e)&&Array.isArray(t))return t.slice();if(Array.isArray(t))return t.slice();if(Array.isArray(e))return t;if("object"==typeof e&&"object"==typeof t&&null!==e&&null!==t){const r={...e};return Object.keys(t).forEach((s=>{r[s]=this.deepMergeObjects(e[s],t[s])})),r}return t},mergeConfig(e){i.Config=this.deepMergeObjects(i.Config,e),i.Config.breakpoints=e.breakpoints??i.Config.breakpoints},hasElementsWithAttributes:(e,t)=>e.some((e=>t.some((t=>Object.keys(e.attributes).includes(t))))),generateRandomName:()=>Math.random().toString(36).substring(2,10),kebabCase:e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),debounce(e,t){let r;return function(...s){clearTimeout(r),r=setTimeout((()=>{clearTimeout(r),e(...s)}),t)}},getBreakpointMaxWidth(e){const t=e.match(/\(max-width:\s*(\d+)px\)/),r=e.match(/\(min-width:\s*(\d+)px\)/);return t?parseInt(t[1]):r?1/0:0}},s={parsers:{timeline:{flow:["disallowEmpty","parseTimelineValue"],responsive:!0},from:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},to:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},keyframes:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues","parseKeyframesValue"],responsive:!0},options:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},target:{flow:["parseSelectorValue"],responsive:!1},on:{flow:["disallowEmpty","parseOnValue"],responsive:!0},action:{flow:["disallowEmpty","parseActionValue"],responsive:!0},scroll:{flow:["parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},splittext:{flow:["parseSplitTextValue"],responsive:!0},pause:{flow:["parseEmptyValue"],responsive:!0}},parseElements(){const e=Array.from(new Set([...this.getAnimatableElements(),...this.getAnimatableElementsByPreset()]));if(e)return this.processAttributes(e)},getAnimatableElementsByPreset:()=>i.Config.presets?Object.entries(i.Config.presets).flatMap((([e,t])=>{const s=`${i.Config.prefix}${r.kebabCase(e)}`;return[...document.getElementsByClassName(s)].map((t=>(t.setAttribute(`${i.Config.prefix}preset`,e),t)))})):[],processAttributes(e){if(!e)return;let r=[];return e.forEach((e=>{try{r.push(this.parseSingleElement(e))}catch{t.error("Can't parse element:",e)}})),r=this.propagateBreakpoints(r),r},parseSingleElement(e){const t=this.parseElementAttributes(e);return{element:e,attributes:t,targets:this.getTargets({element:e,attributes:t})}},propagateBreakpoints(e){const t=Object.keys(i.Config.breakpoints).sort(((e,t)=>{const s=r.getBreakpointMaxWidth(i.Config.breakpoints[e]);return r.getBreakpointMaxWidth(i.Config.breakpoints[t])-s}));return e.map((e=>{for(const[s,n]of Object.entries(e.attributes))if(this.parsers[s]&&this.parsers[s].responsive){const a="default"in n;Object.keys(n).filter((e=>"default"!==e&&e in i.Config.breakpoints));let o={};a&&(o=r.deepMergeObjects({},n.default)),t.forEach((t=>{t in n&&(o=r.deepMergeObjects(o,n[t])),e.attributes[s][t]=r.deepMergeObjects({},o)})),a&&delete e.attributes[s].default}return e}))},getTargets(e){if("&"===e.attributes?.target||!e.attributes?.target)return[e.element];const t=e.attributes.target.trim(),r=t.slice(1).trim();if(t.startsWith("&")){const t=this.getMatchedElements(e.element,r);return t.length?t:[e.element]}return document.querySelectorAll(t)},getMatchedElements:(e,t)=>t.match(/^([.#\[])/)&&e.matches(t)?[e]:t.startsWith(">")?[...e.children].filter((e=>e.matches(t.slice(1).trim()))):[...e.querySelectorAll(t)],getAnimatableElements:()=>Array.from(document.querySelectorAll("*")).filter((e=>Array.from(e.attributes).some((e=>e.name.startsWith(i.Config.prefix))))),parseElementAttributes(e){let r={},s=null;if(Array.from(e.attributes).forEach((n=>{if(n.name!==`${i.Config.prefix}preset`){if(n.name.startsWith(i.Config.prefix)){const s=this.extractAttributeComponents(n.name);if(!s)return;const{type:i,breakpoint:a}=s;if(!this.parsers[i])return void t.warn(`Unknown attribute: ${n.name}`);let o=this.runParsers(e,i,n.value);o?(r[i]=r[i]??{},r[i][a]=o,r[i]=this.checkIfResponsiveAttribute(r[i],i)):t.warn(`Error parsing "${i}" attribute value: ${n.value}`)}}else s=n.value.trim()})),s){const t=this.parsePresetAttributes(s,e);this.deepMergeAttributes(r,t)}return r},extractAttributeComponents(e){const r=e.slice(i.Config.prefix.length).match(/^([a-zA-Z]+)(?:-([a-zA-Z0-9]+))?$/);return r[2]&&!i.Config.breakpoints[r[2]]?(t.warn(`Invalid breakpoint: ${r[2]}`),null):r?{type:r[1],breakpoint:r[2]||"default"}:null},runParsers(e,t,r){try{let s={},i=null;for(const n of this.parsers[t].flow)s=i?this[n](i,e):this[n](r,e),i=s;return s}catch(e){return null}},disallowEmpty(e,t){if(""===e)throw new Error("Empty value for attribute is not allowed");return e},checkIfResponsiveAttribute:(e,t)=>s.parsers[t].responsive?e:e[Object.keys(e)[0]],parsePresetAttributes(e,r){const s=i.Config.presets[e];return s?Object.entries(s).reduce(((s,[n,a])=>{if("selector"===n)return s;const[,o,l="default"]=n.match(/^([a-zA-Z]+)(?:-([a-zA-Z0-9]+))?$/)||[];if(!o||!this.parsers[o])return t.warn(`Invalid or unknown preset attribute: "${n}"`),s;if("default"!==l&&!i.Config.breakpoints[l])return t.warn(`Invalid breakpoint "${l}" in preset "${e}" for type "${o}"`),s;let u=this.runParsers(r,o,a);return u?s[o]={...s[o],[l]:u}:t.warn(`Error parsing "${o}" attribute value: ${a}`),s}),{}):(t.warn(`Preset "${e}" not found`),{})},parseObjectAttribute(e,t){return"object"==typeof e?e:(e=this.resolveVariables(e,t),e=(e=this.escapeCommas(e)).replace(/'/g,'"').replace(/\s+/g," ").trim().replace(/(^|[,{]\s*)([^\s,"'{}[\]:]+)(\s*:)/g,'$1"$2"$3').replace(/(:\s*)([^,{}\[\]\s][^,{}\[\]]*)(?=[,}\]]|$)/g,((e,t,r)=>{const s=r.trim();return s.startsWith("[")||s.startsWith("{")||/^-?\d+(\.\d+)?$/.test(s)||/^(true|false|null)$/i.test(s)?`${t}${s}`:/^".*"$/.test(s)?e:`${t}"${s}"`})).replace(/__COMMA__/g,","))},escapeCommas(e){let t="",r=0,s=!1,i="";const n={"(":")","[":"]","{":"}"},a=[];for(let o=0;o<e.length;o++){const l=e[o];s?(t+=l,l===i&&(s=!1)):'"'===l||"'"===l?(s=!0,i=l,t+=l):n[l]?(a.push(n[l]),r++,t+=l):a.length>0&&l===a[a.length-1]?(a.pop(),r--,t+=l):t+=","===l&&r>0?"__COMMA__":l}return t},deepMergeAttributes(e,t){for(const[s,i]of Object.entries(t))if(e[s])for(const[t,n]of Object.entries(i))e[s][t]?e[s][t]=r.deepMergeObjects(e[s][t],n):e[s][t]=n;else e[s]=r.deepMergeObjects({},i)},resolveVariables(e,t){let r=e.replace(/var\((--[^)]+)\)/g,((e,r)=>getComputedStyle(t).getPropertyValue(r).trim()||"undefined"));return r=r.replace(/\${([^}]+)}/g,((e,r)=>this.evaluateExpression(r.trim(),this.getElementContext(t)))),r},evaluateExpression:(()=>{const e=new Map;return(r,s)=>{e.has(r)||e.set(r,new Function('"use strict";return ('+r+")"));try{return e.get(r).call(s)}catch(e){return void t.error(`Error evaluating expression: ${r}`,e)}}})(),getElementContext:e=>({$element:e,window:window,document:document}),parseJsonToObjectOrArray(e,r){if("object"==typeof e)return e;try{return JSON.parse(`{${e}}`)}catch(r){try{return JSON.parse(`[${e}]`)}catch(r){return t.error("Error parsing attribute value:",e,r),null}}},normalizeAttributeValues(e,t=0,r=100){return t>r?(i.debug.error("Maximum recursion depth exceeded in normalizeAttributeValues"),e):Array.isArray(e)?e.map((e=>this.normalizeAttributeValues(e,t+1,r))):null!==e&&"object"==typeof e?Object.fromEntries(Object.entries(e).map((([e,s])=>[e,this.normalizeAttributeValues(s,t+1,r)]))):this.normalizeValue(e)},normalizeValue(e){if("number"==typeof e)return e;if("string"!=typeof e)return e;const t=e.trim();return/^-?\d+(\.\d+)?$/.test(t)?Number(t):/^(true|false)$/i.test(t)?"true"===t.toLowerCase():e},parseTimelineValue(e){const t=e.split(/,(?![^{}]*})/).map((e=>e.trim()));if(t.length>3)throw new Error(`Invalid timeline value: ${e}. Expected format: name[, position][, properties]`);return 1===t.length?{name:String(t[0]),position:null}:2===t.length?{name:t[0],position:this.normalizeValue(t[1])}:{name:t[0],position:this.normalizeValue(t[1]),options:this.normalizeAttributeValues(this.parseJsonToObjectOrArray(this.parseObjectAttribute(t[2],null),null))[0]}},parseSelectorValue:(e,t)=>e.trim(),parseOnValue:(e,t)=>({events:e.split(",").map((e=>e.trim()))}),parseActionValue(e,t){const[r,s,...i]=e.split(/,(?![^{}]*})/).map((e=>e.trim()));if(!s||!r)throw new Error(`Invalid action format: "${e}", needs at least target and action.`);const n=i.join(",").trim();return{action:r,target:s,arguments:n?n.startsWith("{")&&n.endsWith("}")?this.normalizeAttributeValues(this.parseJsonToObjectOrArray(this.parseObjectAttribute(n,t),t)):this.normalizeValue(n):{}}},parseKeyframesValue:(e,t)=>e,parseSplitTextValue(e,t){if("object"==typeof e)return e;if(e.includes(":"))return e=this.parseObjectAttribute(e,t),e=this.parseJsonToObjectOrArray(e,t),e=this.normalizeAttributeValues(e);return{type:e.split(",").map((e=>e.trim())).filter((e=>e.length>0)).join(", ")}},parseEmptyValue:(e,t)=>!0,getTimelines(e){const t={},s=(e,s)=>{const{attributes:i,element:n,targets:a}=e,o=i.timeline?.[s]?.name??i.timeline?.default?.name??(n.id.length?n.id:null)??r.generateRandomName();t[s]??={},t[s][o]??={animations:[],options:{}};const l=Object.fromEntries(Object.entries(i).filter((([,e])=>e[s]||e.default&&"default"===s)).map((([e,t])=>[e,t[s]??t.default])));t[s][o].animations.push({element:n,attributes:l,targets:a}),0===Object.keys(t[s][o].options).length&&(t[s][o].options=this.getTimelineOptions(i.timeline))};return e.forEach((e=>{const t=new Set(Object.values(e.attributes).flatMap((e=>Object.keys(e))));t.has("default")&&(t.delete("default"),s(e,"default")),t.forEach((t=>s(e,t)))})),Object.fromEntries(Object.entries(t).filter((([e])=>isNaN(e))))},getTimelineOptions(e){if(!e)return{};for(const t in e)if(e[t]&&e[t].options)return e[t].options;return{}}},i={debug:t,utils:r,Parser:s,Config:e,engines:{},registerEngine(e,t,r){i.engines[e]={},i.engines[e].engineClass=t,i.engines[e].plugins=r},init(t=null){if(!i.engines)return;t&&i.utils.mergeConfig(t);const r=s.parseElements(),n=s.getTimelines(r),a=i.engines[e.engine].engineClass;if(!a)return void this.debug.error(`Incorrect animation engine: ${i.Config.engine}`);const o=new a(r,n);o.init&&"function"==typeof o.init&&o.init(i.engines[e.engine],i.Config)}};class n{gsapTimelines=[];elements=[];timelines={};matchMedia=null;gsap=null;plugins=null;defaults={scrollTrigger:{start:"top 90%",end:"bottom 10%",toggleActions:"play reverse play reverse",scrub:!1,invalidateOnRefresh:!0},scrollSmoother:{enabled:!1,options:{smooth:1,effects:!0,smoothTouch:.1}},allDefaults:{force3D:!0,lazy:!1},actions:{play:(e,t,r,s)=>{const i=this.getTimelineByName(e,s);i&&i.play()},pause:(e,t,r,s)=>{const i=this.getTimelineByName(e,s);i&&i.pause()},restart:(e,t,r,s)=>{const i=this.getTimelineByName(e,s);i&&i.restart()},reverse:(e,t,r,s)=>{const i=this.getTimelineByName(e,s);i&&i.reverse()},toggle:(e,t,r,s)=>{const i=this.getTimelineByName(e,s);i&&(i.reversed()?i.play():i.reverse())}}};constructor(e,t){this.elements=e,this.timelines=t}init(e,t){i.Config=t,e?.plugins?.gsap||window.gsap?(this.gsap=e?.plugins?.gsap||window.gsap,this.plugins=e?.plugins||{},this.loadRequiredPlugins(this.elements),this.initScrollSmoother(),this.matchMedia=this.gsap.matchMedia(),this.animate()):i.debug.error("GSAP core not found")}loadRequiredPlugins(e){i.utils.hasElementsWithAttributes(e,["scroll"])&&(this.plugins.ScrollTrigger=this.plugins?.ScrollTrigger||ScrollTrigger,this.gsap.registerPlugin(this.plugins.ScrollTrigger)),i.utils.hasElementsWithAttributes(e,["splittext"])&&(this.plugins.SplitText=this.plugins?.SplitText||SplitText,this.gsap.registerPlugin(this.plugins.SplitText))}animate(){if(this.timelines){this.cleanup();for(const[e,t]of Object.entries(this.timelines))this.matchMedia.add(i.Config.breakpoints[e],(r=>{for(let[r,s]of Object.entries(t)){s=this.prepareTimeline(s);const t={...this.getScrollTrigger(s,s?.scrollElement)},i=this.gsap.timeline({...s.options,...t});s.pause&&i.pause(),this.gsapTimelines.push({name:r,breakpoint:e,timeline:i});for(const t of s.animations){const r=this.createSingleAnimation(t,e);i.add(r,t.attributes?.timeline?.position??0)}}this.setupEventActions(e,r)}));this.handleResize(),this.handlePageShow(),this.handleLoad(),this.refresh()}}setupEventActions(e,t){this.elements.forEach((r=>{const{element:s,attributes:i,targets:n}=r;if(i?.on?.[e]&&i?.action?.[e]){const r=i.on[e].events,s=i.action[e];r.forEach((r=>{n.forEach((i=>{const n=t=>{this.handleAction(s.action,s.target,s.arguments,t,e)};t.add((()=>(i.addEventListener(r,n),()=>{i.removeEventListener(r,n)})))}))}))}}))}handleAction(e,t,r,s,n){"function"==typeof this.defaults.actions[e]?this.defaults.actions[e](t,s,r,n):"function"==typeof i.Config.actions[e]?i.Config.actions[e](t,s,r,n):i.debug.warn(`Action "${e}" not found.`)}getTimelineByName(e,t){const r=this.gsapTimelines.find((r=>r.name===e&&r.breakpoint===t));return r?r.timeline:null}refresh(){this.plugins.ScrollTrigger&&this.plugins.ScrollTrigger.update(),this.plugins.ScrollTrigger&&this.plugins.ScrollTrigger.getAll().forEach((e=>e.refresh()))}handleLoad(){window.addEventListener("load",(()=>this.refresh()))}handleResize(){window.addEventListener("resize",i.utils.debounce((()=>this.refresh()),200),{passive:!0})}handlePageShow(){window.addEventListener("pageshow",(e=>e.persisted&&this.refresh()&&this.animate()))}getConfig(e){return i.Config[e]??this.defaults[e]??null}getScrollTrigger(e,t){if(!e.scroll)return{};return{scrollTrigger:{trigger:t,...0===Object.keys(e.scroll).length?this.getConfig("scrollTrigger"):e.scroll}}}getSplitText(e,t){if(!e.splittext)return t;const r=e.splittext,s=new this.plugins.SplitText(t,r),i=(r.type||"").split(",").map((e=>e.trim()));let n=[];return i.includes("chars")&&(n=n.concat(s.chars)),i.includes("words")&&(n=n.concat(s.words)),i.includes("lines")&&(n=n.concat(s.lines)),0===n.length&&(n=t),n}prepareTimeline(e){let t=null,r=!1;return e.animations.forEach((e=>{e.attributes?.scroll&&(t=t||{scroll:e.attributes.scroll??t,scrollElement:e.element??scrollElement},delete e.attributes.scroll),e.attributes?.pause&&(r=r||{pause:!0},delete e.attributes.pause)})),{...e,...t,...r}}createSingleAnimation(e,t){const{element:r,attributes:s,targets:i}=e;let n={...this.getScrollTrigger(s,r),...this.getConfig("allDefaults")},a=this.getSplitText(s,i);return s.keyframes?this.gsap.to(a,{keyframes:s.keyframes,...s?.options,...n}):s.from&&!s.to?this.gsap.from(a,{...s.from,...s?.options,...n}):s.to&&!s.from?this.gsap.to(a,{...s.to,...s?.options,...n}):s.from&&s.to?this.gsap.fromTo(a,s.from,{...s.to,...s?.options,...n}):void 0}initScrollSmoother(){if(!this.getConfig("scrollSmoother")?.enabled)return;this.plugins.ScrollSmoother=this.plugins?.ScrollSmoother||ScrollSmoother,this.gsap.registerPlugin(this.plugins.ScrollSmoother);document.querySelector("#smooth-content")?this.plugins.ScrollSmoother.create({...this.getConfig("scrollSmoother").options,wrapper:"#smooth-wrapper",content:"#smooth-content"}):i.debug.error("ScrollSmoother: No #smooth-content found")}cleanup(){this.plugins.ScrollTrigger&&this.plugins.ScrollTrigger.killAll(),this.gsapTimelines&&(this.gsapTimelines.forEach((({timeline:e})=>e.kill())),this.gsapTimelines=[])}}export{n as default};
//# sourceMappingURL=af-gsap.esm.js.map
