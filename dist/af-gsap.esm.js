let e={prefix:"af-",breakpoints:{sm:"(max-width: 640px)",md:"(min-width: 641px) and (max-width: 768px)",lg:"(min-width: 769px) and (max-width: 1024px)",xl:"(min-width: 1025px) and (max-width: 1280px)",xxl:"(min-width: 1281px)"},engine:"gsap",debug:!0};const t={log:(...e)=>{s.Config.debug&&console.log("[AF]",...e)},warn:(...e)=>{s.Config.debug&&console.warn("[AF]",...e)},error:(...e)=>{s.Config.debug&&console.error("[AF]",...e)}},i={hasAnimationAttributes:e=>Array.from(e.attributes).some((e=>e.name.startsWith(s.Config.prefix))),deepMergeObjects(e,t){if(Array.isArray(e)&&Array.isArray(t))return t.slice();if(Array.isArray(t))return t.slice();if(Array.isArray(e))return t;if("object"==typeof e&&"object"==typeof t&&null!==e&&null!==t){const i={...e};return Object.keys(t).forEach((r=>{i[r]=this.deepMergeObjects(e[r],t[r])})),i}return t},mergeConfig(e){s.Config=this.deepMergeObjects(s.Config,e),s.Config.breakpoints=e.breakpoints??s.Config.breakpoints},hasElementsWithAttributes:(e,t)=>e.some((e=>t.some((t=>Object.keys(e.attributes).includes(t))))),generateRandomName:()=>Math.random().toString(36).substring(2,10),kebabCase:e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),debounce(e,t){let i;return function(...r){clearTimeout(i),i=setTimeout((()=>{clearTimeout(i),e(...r)}),t)}},getBreakpointMaxWidth(e){const t=e.match(/\(max-width:\s*(\d+)px\)/),i=e.match(/\(min-width:\s*(\d+)px\)/);return t?parseInt(t[1]):i?1/0:0}},r={parsers:{timeline:{flow:["disallowEmpty","parseTimelineValue"],responsive:!0},from:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},to:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},keyframes:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues","parseKeyframesValue"],responsive:!0},options:{flow:["disallowEmpty","parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},target:{flow:["parseSelectorValue"],responsive:!1},on:{flow:["disallowEmpty","parseOnValue"],responsive:!0},action:{flow:["disallowEmpty","parseActionValue"],responsive:!0},scroll:{flow:["parseObjectAttribute","parseJsonToObjectOrArray","normalizeAttributeValues"],responsive:!0},splittext:{flow:["parseSplitTextValue"],responsive:!0},pause:{flow:["parseEmptyValue"],responsive:!0}},parseElements(){const e=Array.from(new Set([...this.getAnimatableElements(),...this.getAnimatableElementsByPreset()]));if(e)return this.processAttributes(e)},getAnimatableElementsByPreset:()=>s.Config.presets?Object.entries(s.Config.presets).flatMap((([e,t])=>{const r=`${s.Config.prefix}${i.kebabCase(e)}`;return[...document.getElementsByClassName(r)].map((t=>(t.setAttribute(`${s.Config.prefix}preset`,e),t)))})):[],processAttributes(e){if(!e)return;let i=[];return e.forEach((e=>{try{i.push(this.parseSingleElement(e))}catch{return t.error("Can't parse element:",e),i}})),i=this.propagateBreakpoints(i),i},parseSingleElement(e){const t=this.parseElementAttributes(e);return{element:e,attributes:t,targets:this.getTargets({element:e,attributes:t})}},propagateBreakpoints(e){const t=Object.keys(s.Config.breakpoints).sort(((e,t)=>{const r=i.getBreakpointMaxWidth(s.Config.breakpoints[e]);return i.getBreakpointMaxWidth(s.Config.breakpoints[t])-r}));return e.map((e=>{for(const[r,n]of Object.entries(e.attributes))if(this.parsers[r]&&this.parsers[r].responsive){const a="default"in n;Object.keys(n).filter((e=>"default"!==e&&e in s.Config.breakpoints));let o={};a&&(o=i.deepMergeObjects({},n.default)),t.forEach((t=>{t in n&&(o=i.deepMergeObjects(o,n[t])),e.attributes[r][t]=i.deepMergeObjects({},o)})),a&&delete e.attributes[r].default}return e}))},getTargets(e){if("&"===e.attributes?.target||!e.attributes?.target)return[e.element];const t=e.attributes.target.trim(),i=t.slice(1).trim();if(t.startsWith("&")){const t=this.getMatchedElements(e.element,i);return t.length?t:[e.element]}return document.querySelectorAll(t)},getMatchedElements:(e,t)=>t.match(/^([.#\[])/)&&e.matches(t)?[e]:t.startsWith(">")?[...e.children].filter((e=>e.matches(t.slice(1).trim()))):[...e.querySelectorAll(t)],getAnimatableElements:()=>Array.from(document.querySelectorAll("*")).filter((e=>Array.from(e.attributes).some((e=>e.name.startsWith(s.Config.prefix))))),parseElementAttributes(e){let i={},r=null;if(Array.from(e.attributes).forEach((n=>{if(n.name!==`${s.Config.prefix}preset`){if(n.name.startsWith(s.Config.prefix)){const r=this.extractAttributeComponents(n.name);if(!r)return;const{type:s,breakpoint:a}=r;if(!this.parsers[s])return void t.warn(`Unknown attribute: ${n.name}`);let o=this.runParsers(e,s,n.value);o?(i[s]=i[s]??{},i[s][a]=o,i[s]=this.checkIfResponsiveAttribute(i[s],s)):t.warn(`Error parsing "${s}" attribute value: ${n.value}`)}}else r=n.value.trim()})),r){const t=this.parsePresetAttributes(r,e);this.deepMergeAttributes(i,t)}return i},extractAttributeComponents(e){const i=e.slice(s.Config.prefix.length).match(/^([a-zA-Z]+)(?:-([a-zA-Z0-9]+))?$/);return i[2]&&!s.Config.breakpoints[i[2]]?(t.warn(`Invalid breakpoint: ${i[2]}`),null):i?{type:i[1],breakpoint:i[2]||"default"}:null},runParsers(e,t,i){try{let r={},s=null;for(const n of this.parsers[t].flow)r=s?this[n](s,e):this[n](i,e),s=r;return r}catch(e){return null}},disallowEmpty(e,t){if(""===e)throw new Error("Empty value for attribute is not allowed");return e},checkIfResponsiveAttribute:(e,t)=>r.parsers[t].responsive?e:e[Object.keys(e)[0]],parsePresetAttributes(e,i){const r=s.Config.presets[e];return r?Object.entries(r).reduce(((r,[n,a])=>{if("selector"===n)return r;const[,o,l="default"]=n.match(/^([a-zA-Z]+)(?:-([a-zA-Z0-9]+))?$/)||[];if(!o||!this.parsers[o])return t.warn(`Invalid or unknown preset attribute: "${n}"`),r;if("default"!==l&&!s.Config.breakpoints[l])return t.warn(`Invalid breakpoint "${l}" in preset "${e}" for type "${o}"`),r;let u=this.runParsers(i,o,a);return u?r[o]={...r[o],[l]:u}:t.warn(`Error parsing "${o}" attribute value: ${a}`),r}),{}):(t.warn(`Preset "${e}" not found`),{})},parseObjectAttribute(e,t){return"object"==typeof e?e:(e=this.resolveVariables(e,t),e=(e=this.escapeCommas(e)).replace(/'/g,'"').replace(/\s+/g," ").trim().replace(/(^|[,{]\s*)([^\s,"'{}[\]:]+)(\s*:)/g,'$1"$2"$3').replace(/(:\s*)([^,{}\[\]\s][^,{}\[\]]*)(?=[,}\]]|$)/g,((e,t,i)=>{const r=i.trim();return r.startsWith("[")||r.startsWith("{")||/^-?\d+(\.\d+)?$/.test(r)||/^(true|false|null)$/i.test(r)?`${t}${r}`:/^".*"$/.test(r)?e:`${t}"${r}"`})).replace(/__COMMA__/g,","))},escapeCommas(e){let t="",i=0,r=!1,s="";const n={"(":")","[":"]","{":"}"},a=[];for(let o=0;o<e.length;o++){const l=e[o];r?(t+=l,l===s&&(r=!1)):'"'===l||"'"===l?(r=!0,s=l,t+=l):n[l]?(a.push(n[l]),i++,t+=l):a.length>0&&l===a[a.length-1]?(a.pop(),i--,t+=l):t+=","===l&&i>0?"__COMMA__":l}return t},deepMergeAttributes(e,t){for(const[r,s]of Object.entries(t))if(e[r])for(const[t,n]of Object.entries(s))e[r][t]?e[r][t]=i.deepMergeObjects(e[r][t],n):e[r][t]=n;else e[r]=i.deepMergeObjects({},s)},resolveVariables(e,t){let i=e.replace(/var\((--[^)]+)\)/g,((e,i)=>getComputedStyle(t).getPropertyValue(i).trim()||"undefined"));return i=i.replace(/\${([^}]+)}/g,((e,i)=>this.evaluateExpression(i.trim(),this.getElementContext(t)))),i},evaluateExpression:(()=>{const e=new Map;return(i,r)=>{e.has(i)||e.set(i,new Function('"use strict";return ('+i+")"));try{return e.get(i).call(r)}catch(e){return void t.error(`Error evaluating expression: ${i}`,e)}}})(),getElementContext:e=>({$element:e,window:window,document:document}),parseJsonToObjectOrArray(e,i){if("object"==typeof e)return e;try{return JSON.parse(`{${e}}`)}catch(i){try{return JSON.parse(`[${e}]`)}catch(i){return t.error("Error parsing attribute value:",e,i),null}}},normalizeAttributeValues(e,t=0,i=100){return t>i?(s.debug.error("Maximum recursion depth exceeded in normalizeAttributeValues"),e):Array.isArray(e)?e.map((e=>this.normalizeAttributeValues(e,t+1,i))):null!==e&&"object"==typeof e?Object.fromEntries(Object.entries(e).map((([e,r])=>[e,this.normalizeAttributeValues(r,t+1,i)]))):this.normalizeValue(e)},normalizeValue(e){if("number"==typeof e)return e;if("string"!=typeof e)return e;const t=e.trim();return/^-?\d+(\.\d+)?$/.test(t)?Number(t):/^(true|false)$/i.test(t)?"true"===t.toLowerCase():e},parseTimelineValue(e){const t=e.split(/,(?![^{}]*})/).map((e=>e.trim()));if(t.length>3)throw new Error(`Invalid timeline value: ${e}. Expected format: name[, position][, properties]`);return 1===t.length?{name:String(t[0]),position:null}:2===t.length?{name:t[0],position:this.normalizeValue(t[1])}:{name:t[0],position:this.normalizeValue(t[1]),options:this.normalizeAttributeValues(this.parseJsonToObjectOrArray(this.parseObjectAttribute(t[2],null),null))[0]}},parseSelectorValue:(e,t)=>e.trim(),parseOnValue:(e,t)=>({events:e.split(",").map((e=>e.trim()))}),parseActionValue(e,t){const[i,r,...s]=e.split(/,(?![^{}]*})/).map((e=>e.trim()));if(!r||!i)throw new Error(`Invalid action format: "${e}", needs at least target and action.`);const n=s.join(",").trim();return{action:i,target:r,arguments:n?n.startsWith("{")&&n.endsWith("}")?this.normalizeAttributeValues(this.parseJsonToObjectOrArray(this.parseObjectAttribute(n,t),t)):this.normalizeValue(n):{}}},parseKeyframesValue:(e,t)=>e,parseSplitTextValue(e,t){if("object"==typeof e)return e;if(e.includes(":"))return e=this.parseObjectAttribute(e,t),e=this.parseJsonToObjectOrArray(e,t),e=this.normalizeAttributeValues(e);return{type:e.split(",").map((e=>e.trim())).filter((e=>e.length>0)).join(", ")}},parseEmptyValue:(e,t)=>!0,getTimelines(e){const t={},r=(e,r)=>{const{attributes:s,element:n,targets:a}=e,o=s.timeline?.[r]?.name??s.timeline?.default?.name??(n.id.length?n.id:null)??i.generateRandomName();t[r]??={},t[r][o]??={animations:[],options:{}};const l=Object.fromEntries(Object.entries(s).filter((([,e])=>e[r]||e.default&&"default"===r)).map((([e,t])=>[e,t[r]??t.default])));t[r][o].animations.push({element:n,attributes:l,targets:a}),0===Object.keys(t[r][o].options).length&&(t[r][o].options=this.getTimelineOptions(s.timeline))};return e.forEach((e=>{const t=new Set(Object.values(e.attributes).flatMap((e=>Object.keys(e))));t.has("default")&&(t.delete("default"),r(e,"default")),t.forEach((t=>r(e,t)))})),Object.fromEntries(Object.entries(t).filter((([e])=>isNaN(e))))},getTimelineOptions(e){if(!e)return{};for(const t in e)if(e[t]&&e[t].options)return e[t].options;return{}}},s={debug:t,utils:i,Parser:r,Config:e,engines:{},engineInstance:null,registerEngine(e,t,i){s.engines[e]={},s.engines[e].engineClass=t},init(e=null){s.engines&&(e&&s.utils.mergeConfig(e),this.observeDOM(),this.initAnimations())},initAnimations(){const t=r.parseElements();t.forEach((e=>{e.element.setAttribute("data-af-processed","true")}));const i=r.getTimelines(t),n=s.engines[e.engine].engineClass;n?this.engineInstance?this.engineInstance.update(t,i):(this.engineInstance=new n(t,i),this.engineInstance.init&&"function"==typeof this.engineInstance.init&&this.engineInstance.init(s.Config)):this.debug.error(`Incorrect animation engine: ${s.Config.engine}`)},observeDOM(){new MutationObserver((e=>{let t=!1;for(const i of e)if("childList"===i.type&&i.addedNodes.length>0){t=!0;break}t&&this.render()})).observe(document.body,{childList:!0,subtree:!0})},render(){const e=r.getAnimatableElements().filter((e=>!e.hasAttribute("data-af-processed")));if(0===e.length)return;e.forEach((e=>{e.setAttribute("data-af-processed","true")}));const t=r.processAttributes(e),i=r.getTimelines(t);this.engineInstance?this.engineInstance.update(t,i):(this.engineInstance=new s.engines[s.Config.engine].engineClass(t,i),this.engineInstance.init&&"function"==typeof this.engineInstance.init&&this.engineInstance.init(s.Config))}};s.registerEngine("gsap",class{gsapTimelines=[];elements=[];timelines={};matchMedia=null;gsap=null;plugins=null;defaults={scrollTrigger:{start:"top 90%",end:"bottom 10%",toggleActions:"play reverse play reverse",scrub:!1,invalidateOnRefresh:!0},scrollSmoother:{enabled:!1,options:{smooth:1,effects:!0,smoothTouch:.1}},allDefaults:{force3D:!0,lazy:!1},actions:{play:(e,t,i,r)=>{const s=this.getTimelineByName(e,r);s&&s.play()},pause:(e,t,i,r)=>{const s=this.getTimelineByName(e,r);s&&s.pause()},restart:(e,t,i,r)=>{const s=this.getTimelineByName(e,r);s&&s.restart()},reverse:(e,t,i,r)=>{const s=this.getTimelineByName(e,r);s&&s.reverse()},toggle:(e,t,i,r)=>{const s=this.getTimelineByName(e,r);s&&(s.reversed()?s.play():s.reverse())}}};constructor(e,t){this.elements=e,this.timelines=t}init(e){s.Config=e,s.Config?.plugins?.gsap||window.gsap?(this.gsap=s.Config?.plugins?.gsap||window.gsap,this.plugins=s.Config?.plugins||{},this.loadRequiredPlugins(this.elements),this.initScrollSmoother(),this.matchMedia=this.gsap.matchMedia(),this.animate()):s.debug.error("GSAP core not found")}loadRequiredPlugins(e){s.utils.hasElementsWithAttributes(e,["scroll"])&&(this.plugins.ScrollTrigger=this.plugins?.ScrollTrigger||ScrollTrigger,this.gsap.registerPlugin(this.plugins.ScrollTrigger)),s.utils.hasElementsWithAttributes(e,["splittext"])&&(this.plugins.SplitText=this.plugins?.SplitText||SplitText,this.gsap.registerPlugin(this.plugins.SplitText))}animate(){if(this.timelines){for(const[e,t]of Object.entries(this.timelines))this.matchMedia.add(s.Config.breakpoints[e],(i=>{for(let[i,r]of Object.entries(t)){if(this.isTimelineInitialized(i,e))continue;r=this.prepareTimeline(r);const t={...this.getScrollTrigger(r,r?.scrollElement)},s=this.gsap.timeline({...r.options,...t});r.pause&&s.pause(),this.gsapTimelines.push({name:i,breakpoint:e,timeline:s});for(const t of r.animations){const i=this.createSingleAnimation(t,e);s.add(i,t.attributes?.timeline?.position??0)}}this.setupEventActions(e,i)}));this.handleResize(),this.handlePageShow(),this.handleLoad(),this.refresh()}}update(e,t){this.elements=[...this.elements,...e];for(const[e,i]of Object.entries(t))this.timelines[e]?Object.assign(this.timelines[e],i):this.timelines[e]=i;this.animateNewElements(e,t)}animateNewElements(e,t){if(t){for(const[e,i]of Object.entries(t))this.matchMedia.add(s.Config.breakpoints[e],(t=>{for(let[t,r]of Object.entries(i)){if(this.isTimelineInitialized(t,e))continue;r=this.prepareTimeline(r);const i={...this.getScrollTrigger(r,r?.scrollElement)},s=this.gsap.timeline({...r.options,...i});r.pause&&s.pause(),this.gsapTimelines.push({name:t,breakpoint:e,timeline:s});for(const t of r.animations){const i=this.createSingleAnimation(t,e);s.add(i,t.attributes?.timeline?.position??0)}}this.setupEventActions(e,t)}));this.refresh()}}isTimelineInitialized(e,t){return this.gsapTimelines.some((i=>i.name===e&&i.breakpoint===t))}setupEventActions(e,t){this.elements.forEach((i=>{const{element:r,attributes:s,targets:n}=i;if(s?.on?.[e]&&s?.action?.[e]){const i=s.on[e].events,r=s.action[e];i.forEach((i=>{n.forEach((s=>{const n=t=>{this.handleAction(r.action,r.target,r.arguments,t,e)};t.add((()=>(s.addEventListener(i,n),()=>{s.removeEventListener(i,n)})))}))}))}}))}handleAction(e,t,i,r,n){"function"==typeof this.defaults.actions[e]?this.defaults.actions[e](t,r,i,n):"function"==typeof s.Config.actions[e]?s.Config.actions[e](t,r,i,n):s.debug.warn(`Action "${e}" not found.`)}getTimelineByName(e,t){const i=this.gsapTimelines.find((i=>i.name===e&&i.breakpoint===t));return i?i.timeline:null}refresh(){this.plugins.ScrollTrigger&&this.plugins.ScrollTrigger.update(),this.plugins.ScrollTrigger&&this.plugins.ScrollTrigger.getAll().forEach((e=>e.refresh()))}handleLoad(){window.addEventListener("load",(()=>this.refresh()))}handleResize(){window.addEventListener("resize",s.utils.debounce((()=>this.refresh()),200),{passive:!0})}handlePageShow(){window.addEventListener("pageshow",(e=>e.persisted&&this.refresh()&&this.animate()))}getConfig(e){return s.Config[e]??this.defaults[e]??null}getScrollTrigger(e,t){if(!e.scroll)return{};return{scrollTrigger:{trigger:t,...0===Object.keys(e.scroll).length?this.getConfig("scrollTrigger"):e.scroll}}}getSplitText(e,t){if(!e.splittext)return t;const i=e.splittext,r=new this.plugins.SplitText(t,i),s=(i.type||"").split(",").map((e=>e.trim()));let n=[];return s.includes("chars")&&(n=n.concat(r.chars)),s.includes("words")&&(n=n.concat(r.words)),s.includes("lines")&&(n=n.concat(r.lines)),0===n.length&&(n=t),n}prepareTimeline(e){let t=null,i=!1;return e.animations.forEach((e=>{e.attributes?.scroll&&(t=t||{scroll:e.attributes.scroll??t,scrollElement:e.element??scrollElement},delete e.attributes.scroll),e.attributes?.pause&&(i=i||{pause:!0},delete e.attributes.pause)})),{...e,...t,...i}}createSingleAnimation(e,t){const{element:i,attributes:r,targets:s}=e;let n={...this.getScrollTrigger(r,i),...this.getConfig("allDefaults")},a=this.getSplitText(r,s);return r.keyframes?this.gsap.to(a,{keyframes:r.keyframes,...r?.options,...n}):r.from&&!r.to?this.gsap.from(a,{...r.from,...r?.options,...n}):r.to&&!r.from?this.gsap.to(a,{...r.to,...r?.options,...n}):r.from&&r.to?this.gsap.fromTo(a,r.from,{...r.to,...r?.options,...n}):void 0}initScrollSmoother(){if(!this.getConfig("scrollSmoother")?.enabled)return;this.plugins.ScrollSmoother=this.plugins?.ScrollSmoother||ScrollSmoother,this.gsap.registerPlugin(this.plugins.ScrollSmoother);document.querySelector("#smooth-content")?this.plugins.ScrollSmoother.create({...this.getConfig("scrollSmoother").options,wrapper:"#smooth-wrapper",content:"#smooth-content"}):s.debug.error("ScrollSmoother: No #smooth-content found")}cleanup(){this.gsapTimelines=this.gsapTimelines.filter((({timeline:e,name:t,breakpoint:i})=>!!this.elements.some((e=>e.attributes.timeline?.[i]?.name===t))||(e.kill(),!1)))}});export{s as default};
//# sourceMappingURL=af-gsap.esm.js.map
